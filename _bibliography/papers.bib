
@inproceedings{kargaran-2022-hengam,
	title        = {Hengam: An Adversarially Trained Transformer for Persian Temporal Tagging},
	author       = {Mirzababaei, Sajad  and Kargaran (co-first author), Amir Hossein  and Schütze, Hinrich  and Asgari, Ehsaneddin},
	year         = 2022,
	month        = nov,
	booktitle    = {Proceedings of the 2nd Conference of the Asia-Pacific Chapter of the Association for Computational Linguistics and the 12th International Joint Conference on Natural Language Processing},
	publisher    = {Association for Computational Linguistics},
	address      = {Taipei, Taiwan},
	pages        = {1--1},
	abbr         = {AACL 2022},
	code         = {https://github.com/kargaranamir/hengam},
	acl          = {https://www.aacl2022.org/paper},
	selected     = true,
	abstract     = {Many NLP main tasks benefit from an accurate understanding of temporal expressions, e.g., text summarization, question answering, and information retrieval. This paper introduces Hengam, an adversarially trained transformer for Persian temporal tagging outperforming state-of-the-art approaches on a diverse and manually created dataset. We create Hengam in the following concrete steps: (1) we develop HengamTagger, an extensible rule-based tool that can extract temporal expressions from a set of diverse language-specific patterns for any language of interest. (2) We apply HengamTagger to annotate temporal tags in a large and diverse Persian text collection (covering both formal and informal contexts) to be used as weakly labeled data. (3) We introduce an adversarially trained transformer model on HengamCorpus that can generalize over the HengamTagger’s rules. We create HengamGold, the first high-quality gold standard for Persian temporal tagging. Our trained adversarial HengamTransformer not only achieves the best performance in terms of the F1-score (a type F1-Score of 95.42 and a partial F1-Score of 91.60) but also successfully deals with language ambiguities and incorrect spellings. Our code, data, and models are publicly available at https://github.com/kargaranamir/Hengam.}
}

@inproceedings{kargaran-2021-wideadgraph,
	title        = {Wide-AdGraph: Detecting Ad Trackers with a Wide Dependency Chain Graph},
	author       = {Kargaran, Amir Hossein and Akhondzadeh, Mohammad Sadegh and Heidarpour, Mohammad Reza and Manshaei, Mohammad Hossein and Salamatian, Kave and Nejad Sattary, Masoud},
	year         = 2021,
	booktitle    = {13th ACM Web Science Conference},
	publisher    = {Association for Computing Machinery},
	address      = {Virtual Event, United Kingdom},
	pages        = {253--261},
	doi          = {10.1145/3447535.3462549},
	abbr         = {WEBSCI 2021},
	pdf          = {https://arxiv.org/pdf/2004.14826.pdf},
	acm          = {https://dl.acm.org/doi/abs/10.1145/3447535.3462549},
	video        = {https://www.youtube.com/watch?v=PpFpfEMVze0},
	code         = {https://github.com/kargaranamir/Wide-AdGraph},
	arxiv        = {2004.14826},
	selected     = true,
	best_student_paper = {https://www.acm.org/conferences/best-paper-awards},
	abstract     = {Websites use third-party ads and tracking services to deliver targeted ads and collect information about users that visit them. These services put users’ privacy at risk, and that is why users’ demand for blocking these services is growing. Most of the blocking solutions rely on crowd-sourced filter lists manually maintained by a large community of users. In this work, we seek to simplify the update of these filter lists by combining different websites through a large-scale graph connecting all resource requests made over a large set of sites. The features of this graph are extracted and used to train a machine learning algorithm with the aim of detecting ads and tracking resources. As our approach combines different information sources, it is more robust toward evasion techniques that use obfuscation or changing the usage patterns. We evaluate our work over the Alexa top-10K websites and find its accuracy to be 96.1% biased and 90.9% unbiased with high precision and recall. It can also block new ads and tracking services, which would necessitate being blocked by further crowd-sourced existing filter lists. Moreover, the approach followed in this paper sheds light on the ecosystem of third-party tracking and advertising.}
}

@article{kargaran-2021-alramsimilarity,
	title        = {Analytical Derivation and Comparison of Alarm Similarity Measures},
	author       = {Kargaran, Amir Hossein and Neshastegaran, Amir and Izadi, Iman and Yazdian, Ehsan},
	year         = 2021,
	journal      = {IFAC-PapersOnLine},
	publisher    = {Elsevier},
	volume       = 54,
	number       = 3,
	pages        = {360--365},
	doi          = {10.1016/j.ifacol.2021.08.268},
	abbr         = {ADCHEM 2021},
	pdf          = {https://www.sciencedirect.com/science/article/pii/S2405896321010417/pdf?md5=3b80e77a7019d21f5938629e326a8635&pid=1-s2.0-S2405896321010417-main.pdf},
	arxiv        = {2003.10600},
	video        = {https://www.youtube.com/watch?v=8_EB3OgtE2s},
	code         = {https://github.com/kargaranamir/Alarm-Similarity},
	selected     = false,
	abstract     = {An industrial process includes many devices, variables, and sub-processes that are physically or electronically interconnected. These interconnections imply some level of correlation between different process variables. Since most of the alarms in a process plant are defined on process variables, alarms are also correlated. However, this can be a nuisance to operators, for one fault might trigger a, sometimes large, number of alarms. So, it is essential to find and correct correlated alarms. In this paper, we study different methods and techniques proposed to measure correlation or similarity between alarms. The similarity indices are first analytically calculated and then studied and compared. The results are also validated using Monte-Carlo simulation.}
}
